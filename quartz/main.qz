import quartz::std;
import quartz::lexer;
import quartz::parser;

fun test() {
    if !"hello".equal("hello") {
        println("string_equal failed");
    }
    if "hello".equal("world") {
        println("string_equal failed");
    }
    if !is_space("hoge fuga", 4) {
        println("is_space failed");
    }
    if !"hoge fuga".slice(0, 4).equal("hoge") {
        println("slice failed");
    }
    if !"hoge fuga".slice_start(2).equal("ge fuga") {
        println("slice_start failed");
    }
    if !"hoge".concat(" fuga").equal("hoge fuga") {
        println("string_concat failed");
        println("hoge".concat(" fuga"));
    }
}

fun main() {
    test();

    let lexer = Lexer::new();
    lexer.run(`
fun main(): i32 {
    let x: i32 = 10;
    return x + 1;
}
`);

    let parser = Parser::new();
    parser.run(lexer.tokens);

    debug_i32(lexer.tokens.length);
}
