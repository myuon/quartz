resolve_path: vec("_fd_write", "quartz_path_Path_push", "quartz_ir_IrTerm_ident", "quartz_parser_Parser_struct_decl", "quartz_parser_Parser_new", "quartz_std_hash_string", "quartz_std_i32_parse", "quartz_compiler_find_line_column_from_position", "quartz_generator_Generator_new", "quartz_parser_Parser_return_statement", "quartz_std_read_i32_from_bytes_le", "quartz_ir_code_gen_IrCodeGenerator_statement", "quartz_generator_Generator_expression", "quartz_typecheck_Typechecker_resolve_path", "quartz_lexer_Lexer_consume_raw_string_literal", "quartz_std_args_string", "quartz_ir_code_gen_IrCodeGenerator_allocate_heap_object", "quartz_ast_TypeStruct_index", "quartz_parser_Parser_module_", "quartz_std_vec_make_byte", "quartz_std_map_list_keys", "quartz_std_bool_to_string", "quartz_generator_escape", "quartz_ast_Decl_to_string", "quartz_std_load_type_rep", "quartz_std_u32_to_string", "quartz_std_map_find_entry", "quartz_parser_Parser_let_statement", "Module", "quartz_generator_Generator_run", "quartz_parser_Parser_pattern", "IrCall", "stringbuilder", "quartz_ast_TypeStruct_at", "quartz_parser_Parser_span_location", "quartz_ir_code_gen_IrCodeGenerator_function", "get_args_at", "quartz_std_i64_to_i32", "quartz_ast_Statement_to_string", "quartz_std_dump_strings", "StringTable", "LDecl", "quartz_ast_Expression_to_string", "quartz_parser_Parser_decl", "quartz_generator_Generator_generate_op_comparison", "quartz_typecheck_Typechecker_register_locals_with_pattern", "Block", "quartz_ir_code_gen_IrCodeGenerator_register_string", "quartz_parser_Parser_enum_decl", "quartz_parser_Parser_type_primitive", "quartz_std_file_write", "quartz_ast_Type_is_integer_type", "quartz_parser_Parser_term_3", "quartz_ast_Function_to_type", "Function", "quartz_std_TypeRep_sizeof", "quartz_std_u32_parse", "quartz_compiler_Compiler_matches", "quartz_lexer_Lexer_consume_string_literal", "quartz_std_derive_to_string_internal", "quartz_generator_Generator_set_start_terms", "quartz_ast_Type_to_string", "quartz_std_reflection_print_type", "quartz_std_println", "quartz_typecheck_Typechecker_path_to", "_fd_read", "quartz_generator_Generator_convert_stack_to_bool", "quartz_std_get_type_rep_address", "quartz_ast_Module_to_string", "quartz_typecheck_Typechecker_is_search_finished", "MapEntry", "Generator", "quartz_std_string_starts_with", "quartz_compiler_Compiler_check", "quartz_generator_Generator_decl", "quartz_std_vec_clone", "quartz_std_new_empty_string", "quartz_parser_Parser_type_", "quartz_parser_Parser_consume", "debug", "quartz_std_map_has", "quartz_std_string_repeat", "quartz_std_print_vec_string", "LExpression", "quartz_std_stringbuilder_append", "quartz_parser_Parser_function", "Decl", "quartz_parser_Parser_expect_ident", "quartz_lexer_is_term_boundary", "quartz_ir_IrType_is_nil", "quartz_typecheck_Typechecker_function", "quartz_generator_Generator_convert_value_i32_to_byte_1", "quartz_typecheck_Typechecker_resolve_record_type", "quartz_std_error_new", "Statement", "quartz_path_Path_starts_with", "quartz_std_alloc", "quartz_std_i32_to_i64", "quartz_ir_code_gen_IrCodeGenerator_assign", "quartz_std_vec_extend", "quartz_compiler_Compiler_go_to_def", "RecordExpression", "quartz_ir_code_gen_StringTable_new", "Compiler", "quartz_path_Path_clone", "_reflection_is_pointer", "quartz_std_vec_push_byte", "quartz_std_read_stdin_byte", "_path_open", "quartz_ir_code_gen_IrCodeGenerator_resolve_type_struct", "quartz_std_format", "quartz_lexer_Lexer_consume_number", "quartz_parser_Parser_term_0", "quartz_compiler_Compiler_new", "quartz_std_strings_ptr", "quartz_std_reflection_get_type_rep", "quartz_parser_Parser_peek", "quartz_generator_Generator_optimize_i32", "quartz_std_strings_count", "quartz_parser_Parser_parameters", "quartz_std_vec_at", "TypeRepTable", "quartz_parser_Parser_term_5", "Token", "quartz_std_vec_byte_to_string", "quartz_std_string_concat", "quartz_std_file_open", "quartz_ir_code_gen_IrCodeGenerator_run", "quartz_generator_Generator_start", "reflection_get_type_rep_id", "Typechecker", "quartz_std_string_compare_lte", "quartz_ir_IrType_to_string", "quartz_std_vec_make", "quartz_path_Path_join", "quartz_std_file_read", "quartz_parser_Parser_dot_after", "quartz_std_type_reps_count", "set_ciovec", "_fd_filestat_get", "quartz_std_digit_to_string", "quartz_ir_code_gen_IrCodeGenerator_new", "quartz_std_string_escape_with", "quartz_std_args", "quartz_generator_Generator_convert_stack_from_bool_1", "quartz_lexer_Lexer_consume_space", "quartz_std_vec_push", "quartz_generator_Generator_load_i64", "quartz_ir_code_gen_IrCodeGenerator_write_type_rep", "quartz_parser_Parser_is_end", "quartz_std_char_to_string", "quartz_ir_code_gen_IrCodeGenerator_generate_call", "quartz_typecheck_Typechecker_decl", "quartz_ast_Type_string", "quartz_ir_IrType_sizeof", "quartz_std_string_replace_first", "quartz_std_reflection_is_pointer", "quartz_ast_TypeStruct_has", "quartz_ir_code_gen_StringTable_get_or_insert", "vec", "Ident", "quartz_parser_Parser_global_let", "quartz_generator_Generator_convert_value_byte_to_i32_1", "quartz_generator_MODE_READABLE_WASM", "quartz_value_Value_as_i64", "quartz_ast_RecordExpression_at", "quartz_typecheck_Typechecker_set_search_node_type", "quartz_typecheck_Typechecker_expression", "quartz_generator_Generator_convert_value_i32_to_address_1", "quartz_ir_code_gen_IrCodeGenerator_generate_array_with_rep", "quartz_parser_Parser_module_decl", "quartz_std_vec_at_byte", "quartz_path_Path_extend", "quartz_parser_Parser_term_2", "quartz_compiler_Compiler_parse", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_strings", "quartz_path_Path_remove_prefix", "quartz_typecheck_Typechecker_statement", "quartz_generator_Generator_end", "quartz_ir_code_gen_IrCodeGenerator_module_", "quartz_parser_Parser_ident", "quartz_std_string_split", "quartz_generator_Generator_write_value", "IrReturn", "quartz_value_Value_nil_", "IrLet", "quartz_typecheck_Typechecker_set_completion", "quartz_std_string_to_string", "quartz_std_string_replace", "Map", "quartz_generator_Generator_generate_op_arithmetic", "quartz_ir_IrTerm_to_string", "quartz_std_string_find_first", "quartz_parser_Parser_expression_conditional", "quartz_std_stdin", "quartz_generator_Generator_expression_left_value", "quartz_typecheck_Typechecker_module_register_for_back_reference", "quartz_std_i64_to_string", "quartz_std_reflection_is_bool", "quartz_std_panic", "quartz_generator_Generator_set_globals", "get_args_len", "quartz_generator_Generator_generate", "quartz_generator_Generator_generate_if", "quartz_lexer_Lexer_consume_ident", "quartz_lexer_Lexer_match", "abort", "Type", "string", "_reflection_is_bool", "quartz_std_string_line_counts", "quartz_std_map_insert", "quartz_typecheck_Typechecker_new", "quartz_lexer_Lexer_consume_comment", "quartz_ast_Block_to_string", "Location", "quartz_ir_code_gen_IrCodeGenerator_generate_array_at", "quartz_std_string_at", "println", "Value", "quartz_std_map_at", "quartz_std_string_slice_start", "quartz_generator_Generator_convert_stack_to_i32_2", "quartz_std_file_close", "quartz_parser_Parser_run", "error", "quartz_ir_code_gen_IrCodeGenerator_block", "IrFunc", "quartz_generator_Generator_convert_stack_from_i32_1", "quartz_lexer_Lexer_new", "Let", "quartz_std_is_space", "quartz_ir_code_gen_typeRepKindStruct", "quartz_std_reflection_parse_type_rep", "quartz_compiler_Compiler_register_module", "quartz_parser_Parser_expression_", "quartz_ir_code_gen_IrCodeGenerator_generate_array", "quartz_typecheck_is_prefix_path", "Pattern", "quartz_generator_Generator_set_type_reps", "quartz_std_stringbuilder_new", "quartz_typecheck_unify", "quartz_std_is_included", "quartz_parser_Parser_term_4", "quartz_std_stringbuilder_to_string", "quartz_ir_IrType_new", "quartz_std_string_escape", "quartz_std_map_make", "quartz_std_new_string", "LBlock", "quartz_parser_Parser_term_0_1", "quartz_lexer_Token_to_string", "quartz_ast_Pattern_to_string", "quartz_std_string_slice", "quartz_ir_code_gen_IrCodeGenerator_expression", "quartz_compiler_Compiler_compile", "quartz_ir_code_gen_TypeRepTable_new", "quartz_std_string_format", "quartz_std_vec_pop", "quartz_ir_code_gen_typeRepKindEnum", "quartz_generator_Generator_new_statement", "LoadedModule", "quartz_ast_Let_to_string", "quartz_typecheck_Typechecker_block", "quartz_std_reflection_assert_pointer", "TypeStruct", "quartz_parser_Parser_block", "quartz_std_string_find_all", "quartz_typecheck_Typechecker_find_definition", "Path", "Parser", "quartz_ir_code_gen_IrCodeGenerator_path_to", "quartz_parser_Parser_statement", "quartz_std_string_equal", "quartz_ir_code_gen_InternalTypeRep_from_struct", "quartz_parser_Parser_path", "quartz_ir_IrTerm_i32", "quartz_std_load_string", "xor_u32", "quartz_std_derive_to_string_pretty", "quartz_std_print_string", "quartz_std_read_filestat_get", "LStatement", "quartz_compiler_Compiler_completion", "quartz_std_min", "quartz_ast_RecordExpression_to_fields_map", "quartz_std_reflection_get_type_rep_ptr", "quartz_compiler_find_position", "quartz_std_alloc_ptr", "i64_to_string_at", "quartz_ir_code_gen_IrCodeGenerator_wrap_mult_sizeof", "quartz_typecheck_Typechecker_find_at_cursor", "quartz_typecheck_Typechecker_set_search_node_definition", "_fd_close", "quartz_std_max", "quartz_generator_Generator_convert_stack_to_i32_1", "quartz_parser_Parser_expect", "quartz_std_is_address_type_rep", "quartz_path_Path_new", "quartz_lexer_Lexer_match_term", "quartz_std_print", "quartz_compiler_Compiler_load_module", "i64", "LType", "quartz_generator_Generator_function", "quartz_std_type_reps_ptr", "Expression", "quartz_typecheck_Typechecker_expression_left_value", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_type_reps", "quartz_compiler_Compiler_check_type", "quartz_generator_Generator_generate_op_arithmetic_i64", "quartz_ir_code_gen_InternalTypeRep_from_name", "quartz_typecheck_Typechecker_module_", "quartz_ast_Function_to_string", "quartz_compiler_find_position_by_line_counts", "quartz_std_vec_slice", "quartz_std_derive_to_string", "TypeRep", "quartz_path_Path_ident", "quartz_generator_Generator_fold_consts", "quartz_std_string_escape_raw", "LPattern", "InternalTypeRep", "IrTerm", "quartz_generator_Generator_global_let", "quartz_generator_Generator_write", "quartz_generator_Generator_convert_value_address_to_i32_1", "IrCodeGenerator", "quartz_parser_Parser_term_1", "quartz_std_vec_extend_byte", "Lexer", "quartz_parser_Parser_expression", "quartz_typecheck_Typechecker_completion", "debug_i32", "quartz_ir_IrTerm_find_locals", "quartz_generator_Generator_set_strings", "quartz_std_error_detail", "quartz_lexer_Lexer_run", "quartz_std_i64_new", "quartz_std_is_a_record", "IrType", "quartz_ir_code_gen_InternalTypeRep_equal", "quartz_ir_code_gen_TypeRepTable_get_or_insert", "quartz_std_string_lines", "quartz_std_i32_to_string", "quartz_value_Value_wasm_type", "quartz_location_Location_unknown", "quartz_ast_RecordExpression_to_string", "quartz_ir_code_gen_InternalTypeRep_from_ir_type", "quartz_std_is_prefix")
resolve_path: vec("_fd_write", "quartz_path_Path_push", "quartz_ir_IrTerm_ident", "quartz_parser_Parser_struct_decl", "quartz_parser_Parser_new", "quartz_std_hash_string", "quartz_std_i32_parse", "quartz_compiler_find_line_column_from_position", "quartz_generator_Generator_new", "quartz_parser_Parser_return_statement", "quartz_std_read_i32_from_bytes_le", "quartz_ir_code_gen_IrCodeGenerator_statement", "quartz_generator_Generator_expression", "quartz_typecheck_Typechecker_resolve_path", "quartz_lexer_Lexer_consume_raw_string_literal", "quartz_std_args_string", "quartz_ir_code_gen_IrCodeGenerator_allocate_heap_object", "quartz_ast_TypeStruct_index", "quartz_parser_Parser_module_", "quartz_std_vec_make_byte", "quartz_std_map_list_keys", "quartz_std_bool_to_string", "quartz_generator_escape", "quartz_ast_Decl_to_string", "quartz_std_load_type_rep", "quartz_std_u32_to_string", "quartz_std_map_find_entry", "quartz_parser_Parser_let_statement", "Module", "quartz_generator_Generator_run", "quartz_parser_Parser_pattern", "IrCall", "stringbuilder", "quartz_ast_TypeStruct_at", "quartz_parser_Parser_span_location", "quartz_ir_code_gen_IrCodeGenerator_function", "get_args_at", "quartz_std_i64_to_i32", "quartz_ast_Statement_to_string", "quartz_std_dump_strings", "StringTable", "LDecl", "quartz_ast_Expression_to_string", "quartz_parser_Parser_decl", "quartz_generator_Generator_generate_op_comparison", "quartz_typecheck_Typechecker_register_locals_with_pattern", "Block", "quartz_ir_code_gen_IrCodeGenerator_register_string", "quartz_parser_Parser_enum_decl", "quartz_parser_Parser_type_primitive", "quartz_std_file_write", "quartz_ast_Type_is_integer_type", "quartz_parser_Parser_term_3", "quartz_ast_Function_to_type", "Function", "quartz_std_TypeRep_sizeof", "quartz_std_u32_parse", "quartz_compiler_Compiler_matches", "quartz_lexer_Lexer_consume_string_literal", "quartz_std_derive_to_string_internal", "quartz_generator_Generator_set_start_terms", "quartz_ast_Type_to_string", "quartz_std_reflection_print_type", "quartz_std_println", "quartz_typecheck_Typechecker_path_to", "_fd_read", "quartz_generator_Generator_convert_stack_to_bool", "quartz_std_get_type_rep_address", "quartz_ast_Module_to_string", "quartz_typecheck_Typechecker_is_search_finished", "MapEntry", "Generator", "quartz_std_string_starts_with", "quartz_compiler_Compiler_check", "quartz_generator_Generator_decl", "quartz_std_vec_clone", "quartz_std_new_empty_string", "quartz_parser_Parser_type_", "quartz_parser_Parser_consume", "debug", "quartz_std_map_has", "quartz_std_string_repeat", "quartz_std_print_vec_string", "LExpression", "quartz_std_stringbuilder_append", "quartz_parser_Parser_function", "Decl", "quartz_parser_Parser_expect_ident", "quartz_lexer_is_term_boundary", "quartz_ir_IrType_is_nil", "quartz_typecheck_Typechecker_function", "quartz_generator_Generator_convert_value_i32_to_byte_1", "quartz_typecheck_Typechecker_resolve_record_type", "quartz_std_error_new", "Statement", "quartz_path_Path_starts_with", "quartz_std_alloc", "quartz_std_i32_to_i64", "quartz_ir_code_gen_IrCodeGenerator_assign", "quartz_std_vec_extend", "quartz_compiler_Compiler_go_to_def", "RecordExpression", "quartz_ir_code_gen_StringTable_new", "Compiler", "quartz_path_Path_clone", "_reflection_is_pointer", "quartz_std_vec_push_byte", "quartz_std_read_stdin_byte", "_path_open", "quartz_ir_code_gen_IrCodeGenerator_resolve_type_struct", "quartz_std_format", "quartz_lexer_Lexer_consume_number", "quartz_parser_Parser_term_0", "quartz_compiler_Compiler_new", "quartz_std_strings_ptr", "quartz_std_reflection_get_type_rep", "quartz_parser_Parser_peek", "quartz_generator_Generator_optimize_i32", "quartz_std_strings_count", "quartz_parser_Parser_parameters", "quartz_std_vec_at", "TypeRepTable", "quartz_parser_Parser_term_5", "Token", "quartz_std_vec_byte_to_string", "quartz_std_string_concat", "quartz_std_file_open", "quartz_ir_code_gen_IrCodeGenerator_run", "quartz_generator_Generator_start", "reflection_get_type_rep_id", "Typechecker", "quartz_std_string_compare_lte", "quartz_ir_IrType_to_string", "quartz_std_vec_make", "quartz_path_Path_join", "quartz_std_file_read", "quartz_parser_Parser_dot_after", "quartz_std_type_reps_count", "set_ciovec", "_fd_filestat_get", "quartz_std_digit_to_string", "quartz_ir_code_gen_IrCodeGenerator_new", "quartz_std_string_escape_with", "quartz_std_args", "quartz_generator_Generator_convert_stack_from_bool_1", "quartz_lexer_Lexer_consume_space", "quartz_std_vec_push", "quartz_generator_Generator_load_i64", "quartz_ir_code_gen_IrCodeGenerator_write_type_rep", "quartz_parser_Parser_is_end", "quartz_std_char_to_string", "quartz_ir_code_gen_IrCodeGenerator_generate_call", "quartz_typecheck_Typechecker_decl", "quartz_ast_Type_string", "quartz_ir_IrType_sizeof", "quartz_std_string_replace_first", "quartz_std_reflection_is_pointer", "quartz_ast_TypeStruct_has", "quartz_ir_code_gen_StringTable_get_or_insert", "vec", "Ident", "quartz_parser_Parser_global_let", "quartz_generator_Generator_convert_value_byte_to_i32_1", "quartz_generator_MODE_READABLE_WASM", "quartz_value_Value_as_i64", "quartz_ast_RecordExpression_at", "quartz_typecheck_Typechecker_set_search_node_type", "quartz_typecheck_Typechecker_expression", "quartz_generator_Generator_convert_value_i32_to_address_1", "quartz_ir_code_gen_IrCodeGenerator_generate_array_with_rep", "quartz_parser_Parser_module_decl", "quartz_std_vec_at_byte", "quartz_path_Path_extend", "quartz_parser_Parser_term_2", "quartz_compiler_Compiler_parse", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_strings", "quartz_path_Path_remove_prefix", "quartz_typecheck_Typechecker_statement", "quartz_generator_Generator_end", "quartz_ir_code_gen_IrCodeGenerator_module_", "quartz_parser_Parser_ident", "quartz_std_string_split", "quartz_generator_Generator_write_value", "IrReturn", "quartz_value_Value_nil_", "IrLet", "quartz_typecheck_Typechecker_set_completion", "quartz_std_string_to_string", "quartz_std_string_replace", "Map", "quartz_generator_Generator_generate_op_arithmetic", "quartz_ir_IrTerm_to_string", "quartz_std_string_find_first", "quartz_parser_Parser_expression_conditional", "quartz_std_stdin", "quartz_generator_Generator_expression_left_value", "quartz_typecheck_Typechecker_module_register_for_back_reference", "quartz_std_i64_to_string", "quartz_std_reflection_is_bool", "quartz_std_panic", "quartz_generator_Generator_set_globals", "get_args_len", "quartz_generator_Generator_generate", "quartz_generator_Generator_generate_if", "quartz_lexer_Lexer_consume_ident", "quartz_lexer_Lexer_match", "abort", "Type", "string", "_reflection_is_bool", "quartz_std_string_line_counts", "quartz_std_map_insert", "quartz_typecheck_Typechecker_new", "quartz_lexer_Lexer_consume_comment", "quartz_ast_Block_to_string", "Location", "quartz_ir_code_gen_IrCodeGenerator_generate_array_at", "quartz_std_string_at", "println", "Value", "quartz_std_map_at", "quartz_std_string_slice_start", "quartz_generator_Generator_convert_stack_to_i32_2", "quartz_std_file_close", "quartz_parser_Parser_run", "error", "quartz_ir_code_gen_IrCodeGenerator_block", "IrFunc", "quartz_generator_Generator_convert_stack_from_i32_1", "quartz_lexer_Lexer_new", "Let", "quartz_std_is_space", "quartz_ir_code_gen_typeRepKindStruct", "quartz_std_reflection_parse_type_rep", "quartz_compiler_Compiler_register_module", "quartz_parser_Parser_expression_", "quartz_ir_code_gen_IrCodeGenerator_generate_array", "quartz_typecheck_is_prefix_path", "Pattern", "quartz_generator_Generator_set_type_reps", "quartz_std_stringbuilder_new", "quartz_typecheck_unify", "quartz_std_is_included", "quartz_parser_Parser_term_4", "quartz_std_stringbuilder_to_string", "quartz_ir_IrType_new", "quartz_std_string_escape", "quartz_std_map_make", "quartz_std_new_string", "LBlock", "quartz_parser_Parser_term_0_1", "quartz_lexer_Token_to_string", "quartz_ast_Pattern_to_string", "quartz_std_string_slice", "quartz_ir_code_gen_IrCodeGenerator_expression", "quartz_compiler_Compiler_compile", "quartz_ir_code_gen_TypeRepTable_new", "quartz_std_string_format", "quartz_std_vec_pop", "quartz_ir_code_gen_typeRepKindEnum", "quartz_generator_Generator_new_statement", "LoadedModule", "quartz_ast_Let_to_string", "quartz_typecheck_Typechecker_block", "quartz_std_reflection_assert_pointer", "TypeStruct", "quartz_parser_Parser_block", "quartz_std_string_find_all", "quartz_typecheck_Typechecker_find_definition", "Path", "Parser", "quartz_ir_code_gen_IrCodeGenerator_path_to", "quartz_parser_Parser_statement", "quartz_std_string_equal", "quartz_ir_code_gen_InternalTypeRep_from_struct", "quartz_parser_Parser_path", "quartz_ir_IrTerm_i32", "quartz_std_load_string", "xor_u32", "quartz_std_derive_to_string_pretty", "quartz_std_print_string", "quartz_std_read_filestat_get", "LStatement", "quartz_compiler_Compiler_completion", "quartz_std_min", "quartz_ast_RecordExpression_to_fields_map", "quartz_std_reflection_get_type_rep_ptr", "quartz_compiler_find_position", "quartz_std_alloc_ptr", "i64_to_string_at", "quartz_ir_code_gen_IrCodeGenerator_wrap_mult_sizeof", "quartz_typecheck_Typechecker_find_at_cursor", "quartz_typecheck_Typechecker_set_search_node_definition", "_fd_close", "quartz_std_max", "quartz_generator_Generator_convert_stack_to_i32_1", "quartz_parser_Parser_expect", "quartz_std_is_address_type_rep", "quartz_path_Path_new", "quartz_lexer_Lexer_match_term", "quartz_std_print", "quartz_compiler_Compiler_load_module", "i64", "LType", "quartz_generator_Generator_function", "quartz_std_type_reps_ptr", "Expression", "quartz_typecheck_Typechecker_expression_left_value", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_type_reps", "quartz_compiler_Compiler_check_type", "quartz_generator_Generator_generate_op_arithmetic_i64", "quartz_ir_code_gen_InternalTypeRep_from_name", "quartz_typecheck_Typechecker_module_", "quartz_ast_Function_to_string", "quartz_compiler_find_position_by_line_counts", "quartz_std_vec_slice", "quartz_std_derive_to_string", "TypeRep", "quartz_path_Path_ident", "quartz_generator_Generator_fold_consts", "quartz_std_string_escape_raw", "LPattern", "InternalTypeRep", "IrTerm", "quartz_generator_Generator_global_let", "quartz_generator_Generator_write", "quartz_generator_Generator_convert_value_address_to_i32_1", "IrCodeGenerator", "quartz_parser_Parser_term_1", "quartz_std_vec_extend_byte", "Lexer", "quartz_parser_Parser_expression", "quartz_typecheck_Typechecker_completion", "debug_i32", "quartz_ir_IrTerm_find_locals", "quartz_generator_Generator_set_strings", "quartz_std_error_detail", "quartz_lexer_Lexer_run", "quartz_std_i64_new", "quartz_std_is_a_record", "IrType", "quartz_ir_code_gen_InternalTypeRep_equal", "quartz_ir_code_gen_TypeRepTable_get_or_insert", "quartz_std_string_lines", "quartz_std_i32_to_string", "quartz_value_Value_wasm_type", "quartz_location_Location_unknown", "quartz_ast_RecordExpression_to_string", "quartz_ir_code_gen_InternalTypeRep_from_ir_type", "quartz_std_is_prefix")
resolve_path: vec("_fd_write", "quartz_path_Path_push", "quartz_ir_IrTerm_ident", "quartz_parser_Parser_struct_decl", "quartz_parser_Parser_new", "quartz_std_hash_string", "quartz_std_i32_parse", "quartz_compiler_find_line_column_from_position", "quartz_generator_Generator_new", "quartz_parser_Parser_return_statement", "quartz_std_read_i32_from_bytes_le", "quartz_ir_code_gen_IrCodeGenerator_statement", "quartz_generator_Generator_expression", "quartz_typecheck_Typechecker_resolve_path", "quartz_lexer_Lexer_consume_raw_string_literal", "quartz_std_args_string", "quartz_ir_code_gen_IrCodeGenerator_allocate_heap_object", "quartz_ast_TypeStruct_index", "quartz_parser_Parser_module_", "quartz_std_vec_make_byte", "quartz_std_map_list_keys", "quartz_std_bool_to_string", "quartz_generator_escape", "quartz_ast_Decl_to_string", "quartz_std_load_type_rep", "quartz_std_u32_to_string", "quartz_std_map_find_entry", "quartz_parser_Parser_let_statement", "Module", "quartz_generator_Generator_run", "quartz_parser_Parser_pattern", "IrCall", "stringbuilder", "quartz_ast_TypeStruct_at", "quartz_parser_Parser_span_location", "quartz_ir_code_gen_IrCodeGenerator_function", "get_args_at", "quartz_std_i64_to_i32", "quartz_ast_Statement_to_string", "quartz_std_dump_strings", "StringTable", "LDecl", "quartz_ast_Expression_to_string", "quartz_parser_Parser_decl", "quartz_generator_Generator_generate_op_comparison", "quartz_typecheck_Typechecker_register_locals_with_pattern", "Block", "quartz_ir_code_gen_IrCodeGenerator_register_string", "quartz_parser_Parser_enum_decl", "quartz_parser_Parser_type_primitive", "quartz_std_file_write", "quartz_ast_Type_is_integer_type", "quartz_parser_Parser_term_3", "quartz_ast_Function_to_type", "Function", "quartz_std_TypeRep_sizeof", "quartz_std_u32_parse", "quartz_compiler_Compiler_matches", "quartz_lexer_Lexer_consume_string_literal", "quartz_std_derive_to_string_internal", "quartz_generator_Generator_set_start_terms", "quartz_ast_Type_to_string", "quartz_std_reflection_print_type", "quartz_std_println", "quartz_typecheck_Typechecker_path_to", "_fd_read", "quartz_generator_Generator_convert_stack_to_bool", "quartz_std_get_type_rep_address", "quartz_ast_Module_to_string", "quartz_typecheck_Typechecker_is_search_finished", "MapEntry", "Generator", "quartz_std_string_starts_with", "quartz_compiler_Compiler_check", "quartz_generator_Generator_decl", "quartz_std_vec_clone", "quartz_std_new_empty_string", "quartz_parser_Parser_type_", "quartz_parser_Parser_consume", "debug", "quartz_std_map_has", "quartz_std_string_repeat", "quartz_std_print_vec_string", "LExpression", "quartz_std_stringbuilder_append", "quartz_parser_Parser_function", "Decl", "quartz_parser_Parser_expect_ident", "quartz_lexer_is_term_boundary", "quartz_ir_IrType_is_nil", "quartz_typecheck_Typechecker_function", "quartz_generator_Generator_convert_value_i32_to_byte_1", "quartz_typecheck_Typechecker_resolve_record_type", "quartz_std_error_new", "Statement", "quartz_path_Path_starts_with", "quartz_std_alloc", "quartz_std_i32_to_i64", "quartz_ir_code_gen_IrCodeGenerator_assign", "quartz_std_vec_extend", "quartz_compiler_Compiler_go_to_def", "RecordExpression", "quartz_ir_code_gen_StringTable_new", "Compiler", "quartz_path_Path_clone", "_reflection_is_pointer", "quartz_std_vec_push_byte", "quartz_std_read_stdin_byte", "_path_open", "quartz_ir_code_gen_IrCodeGenerator_resolve_type_struct", "quartz_std_format", "quartz_lexer_Lexer_consume_number", "quartz_parser_Parser_term_0", "quartz_compiler_Compiler_new", "quartz_std_strings_ptr", "quartz_std_reflection_get_type_rep", "quartz_parser_Parser_peek", "quartz_generator_Generator_optimize_i32", "quartz_std_strings_count", "quartz_parser_Parser_parameters", "quartz_std_vec_at", "TypeRepTable", "quartz_parser_Parser_term_5", "Token", "quartz_std_vec_byte_to_string", "quartz_std_string_concat", "quartz_std_file_open", "quartz_ir_code_gen_IrCodeGenerator_run", "quartz_generator_Generator_start", "reflection_get_type_rep_id", "Typechecker", "quartz_std_string_compare_lte", "quartz_ir_IrType_to_string", "quartz_std_vec_make", "quartz_path_Path_join", "quartz_std_file_read", "quartz_parser_Parser_dot_after", "quartz_std_type_reps_count", "set_ciovec", "_fd_filestat_get", "quartz_std_digit_to_string", "quartz_ir_code_gen_IrCodeGenerator_new", "quartz_std_string_escape_with", "quartz_std_args", "quartz_generator_Generator_convert_stack_from_bool_1", "quartz_lexer_Lexer_consume_space", "quartz_std_vec_push", "quartz_generator_Generator_load_i64", "quartz_ir_code_gen_IrCodeGenerator_write_type_rep", "quartz_parser_Parser_is_end", "quartz_std_char_to_string", "quartz_ir_code_gen_IrCodeGenerator_generate_call", "quartz_typecheck_Typechecker_decl", "quartz_ast_Type_string", "quartz_ir_IrType_sizeof", "quartz_std_string_replace_first", "quartz_std_reflection_is_pointer", "quartz_ast_TypeStruct_has", "quartz_ir_code_gen_StringTable_get_or_insert", "vec", "Ident", "quartz_parser_Parser_global_let", "quartz_generator_Generator_convert_value_byte_to_i32_1", "quartz_generator_MODE_READABLE_WASM", "quartz_value_Value_as_i64", "quartz_ast_RecordExpression_at", "quartz_typecheck_Typechecker_set_search_node_type", "quartz_typecheck_Typechecker_expression", "quartz_generator_Generator_convert_value_i32_to_address_1", "quartz_ir_code_gen_IrCodeGenerator_generate_array_with_rep", "quartz_parser_Parser_module_decl", "quartz_std_vec_at_byte", "quartz_path_Path_extend", "quartz_parser_Parser_term_2", "quartz_compiler_Compiler_parse", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_strings", "quartz_path_Path_remove_prefix", "quartz_typecheck_Typechecker_statement", "quartz_generator_Generator_end", "quartz_ir_code_gen_IrCodeGenerator_module_", "quartz_parser_Parser_ident", "quartz_std_string_split", "quartz_generator_Generator_write_value", "IrReturn", "quartz_value_Value_nil_", "IrLet", "quartz_typecheck_Typechecker_set_completion", "quartz_std_string_to_string", "quartz_std_string_replace", "Map", "quartz_generator_Generator_generate_op_arithmetic", "quartz_ir_IrTerm_to_string", "quartz_std_string_find_first", "quartz_parser_Parser_expression_conditional", "quartz_std_stdin", "quartz_generator_Generator_expression_left_value", "quartz_typecheck_Typechecker_module_register_for_back_reference", "quartz_std_i64_to_string", "quartz_std_reflection_is_bool", "quartz_std_panic", "quartz_generator_Generator_set_globals", "get_args_len", "quartz_generator_Generator_generate", "quartz_generator_Generator_generate_if", "quartz_lexer_Lexer_consume_ident", "quartz_lexer_Lexer_match", "abort", "Type", "string", "_reflection_is_bool", "quartz_std_string_line_counts", "quartz_std_map_insert", "quartz_typecheck_Typechecker_new", "quartz_lexer_Lexer_consume_comment", "quartz_ast_Block_to_string", "Location", "quartz_ir_code_gen_IrCodeGenerator_generate_array_at", "quartz_std_string_at", "println", "Value", "quartz_std_map_at", "quartz_std_string_slice_start", "quartz_generator_Generator_convert_stack_to_i32_2", "quartz_std_file_close", "quartz_parser_Parser_run", "error", "quartz_ir_code_gen_IrCodeGenerator_block", "IrFunc", "quartz_generator_Generator_convert_stack_from_i32_1", "quartz_lexer_Lexer_new", "Let", "quartz_std_is_space", "quartz_ir_code_gen_typeRepKindStruct", "quartz_std_reflection_parse_type_rep", "quartz_compiler_Compiler_register_module", "quartz_parser_Parser_expression_", "quartz_ir_code_gen_IrCodeGenerator_generate_array", "quartz_typecheck_is_prefix_path", "Pattern", "quartz_generator_Generator_set_type_reps", "quartz_std_stringbuilder_new", "quartz_typecheck_unify", "quartz_std_is_included", "quartz_parser_Parser_term_4", "quartz_std_stringbuilder_to_string", "quartz_ir_IrType_new", "quartz_std_string_escape", "quartz_std_map_make", "quartz_std_new_string", "LBlock", "quartz_parser_Parser_term_0_1", "quartz_lexer_Token_to_string", "quartz_ast_Pattern_to_string", "quartz_std_string_slice", "quartz_ir_code_gen_IrCodeGenerator_expression", "quartz_compiler_Compiler_compile", "quartz_ir_code_gen_TypeRepTable_new", "quartz_std_string_format", "quartz_std_vec_pop", "quartz_ir_code_gen_typeRepKindEnum", "quartz_generator_Generator_new_statement", "LoadedModule", "quartz_ast_Let_to_string", "quartz_typecheck_Typechecker_block", "quartz_std_reflection_assert_pointer", "TypeStruct", "quartz_parser_Parser_block", "quartz_std_string_find_all", "quartz_typecheck_Typechecker_find_definition", "Path", "Parser", "quartz_ir_code_gen_IrCodeGenerator_path_to", "quartz_parser_Parser_statement", "quartz_std_string_equal", "quartz_ir_code_gen_InternalTypeRep_from_struct", "quartz_parser_Parser_path", "quartz_ir_IrTerm_i32", "quartz_std_load_string", "xor_u32", "quartz_std_derive_to_string_pretty", "quartz_std_print_string", "quartz_std_read_filestat_get", "LStatement", "quartz_compiler_Compiler_completion", "quartz_std_min", "quartz_ast_RecordExpression_to_fields_map", "quartz_std_reflection_get_type_rep_ptr", "quartz_compiler_find_position", "quartz_std_alloc_ptr", "i64_to_string_at", "quartz_ir_code_gen_IrCodeGenerator_wrap_mult_sizeof", "quartz_typecheck_Typechecker_find_at_cursor", "quartz_typecheck_Typechecker_set_search_node_definition", "_fd_close", "quartz_std_max", "quartz_generator_Generator_convert_stack_to_i32_1", "quartz_parser_Parser_expect", "quartz_std_is_address_type_rep", "quartz_path_Path_new", "quartz_lexer_Lexer_match_term", "quartz_std_print", "quartz_compiler_Compiler_load_module", "i64", "LType", "quartz_generator_Generator_function", "quartz_std_type_reps_ptr", "Expression", "quartz_typecheck_Typechecker_expression_left_value", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_type_reps", "quartz_compiler_Compiler_check_type", "quartz_generator_Generator_generate_op_arithmetic_i64", "quartz_ir_code_gen_InternalTypeRep_from_name", "quartz_typecheck_Typechecker_module_", "quartz_ast_Function_to_string", "quartz_compiler_find_position_by_line_counts", "quartz_std_vec_slice", "quartz_std_derive_to_string", "TypeRep", "quartz_path_Path_ident", "quartz_generator_Generator_fold_consts", "quartz_std_string_escape_raw", "LPattern", "InternalTypeRep", "IrTerm", "quartz_generator_Generator_global_let", "quartz_generator_Generator_write", "quartz_generator_Generator_convert_value_address_to_i32_1", "IrCodeGenerator", "quartz_parser_Parser_term_1", "quartz_std_vec_extend_byte", "Lexer", "quartz_parser_Parser_expression", "quartz_typecheck_Typechecker_completion", "debug_i32", "quartz_ir_IrTerm_find_locals", "quartz_generator_Generator_set_strings", "quartz_std_error_detail", "quartz_lexer_Lexer_run", "quartz_std_i64_new", "quartz_std_is_a_record", "IrType", "quartz_ir_code_gen_InternalTypeRep_equal", "quartz_ir_code_gen_TypeRepTable_get_or_insert", "quartz_std_string_lines", "quartz_std_i32_to_string", "quartz_value_Value_wasm_type", "quartz_location_Location_unknown", "quartz_ast_RecordExpression_to_string", "quartz_ir_code_gen_InternalTypeRep_from_ir_type", "quartz_std_is_prefix")
resolve_path: vec("_fd_write", "quartz_path_Path_push", "quartz_ir_IrTerm_ident", "quartz_parser_Parser_struct_decl", "quartz_parser_Parser_new", "quartz_std_hash_string", "quartz_std_i32_parse", "quartz_compiler_find_line_column_from_position", "quartz_generator_Generator_new", "quartz_parser_Parser_return_statement", "quartz_std_read_i32_from_bytes_le", "quartz_ir_code_gen_IrCodeGenerator_statement", "quartz_generator_Generator_expression", "quartz_typecheck_Typechecker_resolve_path", "quartz_lexer_Lexer_consume_raw_string_literal", "quartz_std_args_string", "quartz_ir_code_gen_IrCodeGenerator_allocate_heap_object", "quartz_ast_TypeStruct_index", "quartz_parser_Parser_module_", "quartz_std_vec_make_byte", "quartz_std_map_list_keys", "quartz_std_bool_to_string", "quartz_generator_escape", "quartz_ast_Decl_to_string", "quartz_std_load_type_rep", "quartz_std_u32_to_string", "quartz_std_map_find_entry", "quartz_parser_Parser_let_statement", "Module", "quartz_generator_Generator_run", "quartz_parser_Parser_pattern", "IrCall", "stringbuilder", "quartz_ast_TypeStruct_at", "quartz_parser_Parser_span_location", "quartz_ir_code_gen_IrCodeGenerator_function", "get_args_at", "quartz_std_i64_to_i32", "quartz_ast_Statement_to_string", "quartz_std_dump_strings", "StringTable", "LDecl", "quartz_ast_Expression_to_string", "quartz_parser_Parser_decl", "quartz_generator_Generator_generate_op_comparison", "quartz_typecheck_Typechecker_register_locals_with_pattern", "Block", "quartz_ir_code_gen_IrCodeGenerator_register_string", "quartz_parser_Parser_enum_decl", "quartz_parser_Parser_type_primitive", "quartz_std_file_write", "quartz_ast_Type_is_integer_type", "quartz_parser_Parser_term_3", "quartz_ast_Function_to_type", "Function", "quartz_std_TypeRep_sizeof", "quartz_std_u32_parse", "quartz_compiler_Compiler_matches", "quartz_lexer_Lexer_consume_string_literal", "quartz_std_derive_to_string_internal", "quartz_generator_Generator_set_start_terms", "quartz_ast_Type_to_string", "quartz_std_reflection_print_type", "quartz_std_println", "quartz_typecheck_Typechecker_path_to", "_fd_read", "quartz_generator_Generator_convert_stack_to_bool", "quartz_std_get_type_rep_address", "quartz_ast_Module_to_string", "quartz_typecheck_Typechecker_is_search_finished", "MapEntry", "Generator", "quartz_std_string_starts_with", "quartz_compiler_Compiler_check", "quartz_generator_Generator_decl", "quartz_std_vec_clone", "quartz_std_new_empty_string", "quartz_parser_Parser_type_", "quartz_parser_Parser_consume", "debug", "quartz_std_map_has", "quartz_std_string_repeat", "quartz_std_print_vec_string", "LExpression", "quartz_std_stringbuilder_append", "quartz_parser_Parser_function", "Decl", "quartz_parser_Parser_expect_ident", "quartz_lexer_is_term_boundary", "quartz_ir_IrType_is_nil", "quartz_typecheck_Typechecker_function", "quartz_generator_Generator_convert_value_i32_to_byte_1", "quartz_typecheck_Typechecker_resolve_record_type", "quartz_std_error_new", "Statement", "quartz_path_Path_starts_with", "quartz_std_alloc", "quartz_std_i32_to_i64", "quartz_ir_code_gen_IrCodeGenerator_assign", "quartz_std_vec_extend", "quartz_compiler_Compiler_go_to_def", "RecordExpression", "quartz_ir_code_gen_StringTable_new", "Compiler", "quartz_path_Path_clone", "_reflection_is_pointer", "quartz_std_vec_push_byte", "quartz_std_read_stdin_byte", "_path_open", "quartz_ir_code_gen_IrCodeGenerator_resolve_type_struct", "quartz_std_format", "quartz_lexer_Lexer_consume_number", "quartz_parser_Parser_term_0", "quartz_compiler_Compiler_new", "quartz_std_strings_ptr", "quartz_std_reflection_get_type_rep", "quartz_parser_Parser_peek", "quartz_generator_Generator_optimize_i32", "quartz_std_strings_count", "quartz_parser_Parser_parameters", "quartz_std_vec_at", "TypeRepTable", "quartz_parser_Parser_term_5", "Token", "quartz_std_vec_byte_to_string", "quartz_std_string_concat", "quartz_std_file_open", "quartz_ir_code_gen_IrCodeGenerator_run", "quartz_generator_Generator_start", "reflection_get_type_rep_id", "Typechecker", "quartz_std_string_compare_lte", "quartz_ir_IrType_to_string", "quartz_std_vec_make", "quartz_path_Path_join", "quartz_std_file_read", "quartz_parser_Parser_dot_after", "quartz_std_type_reps_count", "set_ciovec", "_fd_filestat_get", "quartz_std_digit_to_string", "quartz_ir_code_gen_IrCodeGenerator_new", "quartz_std_string_escape_with", "quartz_std_args", "quartz_generator_Generator_convert_stack_from_bool_1", "quartz_lexer_Lexer_consume_space", "quartz_std_vec_push", "quartz_generator_Generator_load_i64", "quartz_ir_code_gen_IrCodeGenerator_write_type_rep", "quartz_parser_Parser_is_end", "quartz_std_char_to_string", "quartz_ir_code_gen_IrCodeGenerator_generate_call", "quartz_typecheck_Typechecker_decl", "quartz_ast_Type_string", "quartz_ir_IrType_sizeof", "quartz_std_string_replace_first", "quartz_std_reflection_is_pointer", "quartz_ast_TypeStruct_has", "quartz_ir_code_gen_StringTable_get_or_insert", "vec", "Ident", "quartz_parser_Parser_global_let", "quartz_generator_Generator_convert_value_byte_to_i32_1", "quartz_generator_MODE_READABLE_WASM", "quartz_value_Value_as_i64", "quartz_ast_RecordExpression_at", "quartz_typecheck_Typechecker_set_search_node_type", "quartz_typecheck_Typechecker_expression", "quartz_generator_Generator_convert_value_i32_to_address_1", "quartz_ir_code_gen_IrCodeGenerator_generate_array_with_rep", "quartz_parser_Parser_module_decl", "quartz_std_vec_at_byte", "quartz_path_Path_extend", "quartz_parser_Parser_term_2", "quartz_compiler_Compiler_parse", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_strings", "quartz_path_Path_remove_prefix", "quartz_typecheck_Typechecker_statement", "quartz_generator_Generator_end", "quartz_ir_code_gen_IrCodeGenerator_module_", "quartz_parser_Parser_ident", "quartz_std_string_split", "quartz_generator_Generator_write_value", "IrReturn", "quartz_value_Value_nil_", "IrLet", "quartz_typecheck_Typechecker_set_completion", "quartz_std_string_to_string", "quartz_std_string_replace", "Map", "quartz_generator_Generator_generate_op_arithmetic", "quartz_ir_IrTerm_to_string", "quartz_std_string_find_first", "quartz_parser_Parser_expression_conditional", "quartz_std_stdin", "quartz_generator_Generator_expression_left_value", "quartz_typecheck_Typechecker_module_register_for_back_reference", "quartz_std_i64_to_string", "quartz_std_reflection_is_bool", "quartz_std_panic", "quartz_generator_Generator_set_globals", "get_args_len", "quartz_generator_Generator_generate", "quartz_generator_Generator_generate_if", "quartz_lexer_Lexer_consume_ident", "quartz_lexer_Lexer_match", "abort", "Type", "string", "_reflection_is_bool", "quartz_std_string_line_counts", "quartz_std_map_insert", "quartz_typecheck_Typechecker_new", "quartz_lexer_Lexer_consume_comment", "quartz_ast_Block_to_string", "Location", "quartz_ir_code_gen_IrCodeGenerator_generate_array_at", "quartz_std_string_at", "println", "Value", "quartz_std_map_at", "quartz_std_string_slice_start", "quartz_generator_Generator_convert_stack_to_i32_2", "quartz_std_file_close", "quartz_parser_Parser_run", "error", "quartz_ir_code_gen_IrCodeGenerator_block", "IrFunc", "quartz_generator_Generator_convert_stack_from_i32_1", "quartz_lexer_Lexer_new", "Let", "quartz_std_is_space", "quartz_ir_code_gen_typeRepKindStruct", "quartz_std_reflection_parse_type_rep", "quartz_compiler_Compiler_register_module", "quartz_parser_Parser_expression_", "quartz_ir_code_gen_IrCodeGenerator_generate_array", "quartz_typecheck_is_prefix_path", "Pattern", "quartz_generator_Generator_set_type_reps", "quartz_std_stringbuilder_new", "quartz_typecheck_unify", "quartz_std_is_included", "quartz_parser_Parser_term_4", "quartz_std_stringbuilder_to_string", "quartz_ir_IrType_new", "quartz_std_string_escape", "quartz_std_map_make", "quartz_std_new_string", "LBlock", "quartz_parser_Parser_term_0_1", "quartz_lexer_Token_to_string", "quartz_ast_Pattern_to_string", "quartz_std_string_slice", "quartz_ir_code_gen_IrCodeGenerator_expression", "quartz_compiler_Compiler_compile", "quartz_ir_code_gen_TypeRepTable_new", "quartz_std_string_format", "quartz_std_vec_pop", "quartz_ir_code_gen_typeRepKindEnum", "quartz_generator_Generator_new_statement", "LoadedModule", "quartz_ast_Let_to_string", "quartz_typecheck_Typechecker_block", "quartz_std_reflection_assert_pointer", "TypeStruct", "quartz_parser_Parser_block", "quartz_std_string_find_all", "quartz_typecheck_Typechecker_find_definition", "Path", "Parser", "quartz_ir_code_gen_IrCodeGenerator_path_to", "quartz_parser_Parser_statement", "quartz_std_string_equal", "quartz_ir_code_gen_InternalTypeRep_from_struct", "quartz_parser_Parser_path", "quartz_ir_IrTerm_i32", "quartz_std_load_string", "xor_u32", "quartz_std_derive_to_string_pretty", "quartz_std_print_string", "quartz_std_read_filestat_get", "LStatement", "quartz_compiler_Compiler_completion", "quartz_std_min", "quartz_ast_RecordExpression_to_fields_map", "quartz_std_reflection_get_type_rep_ptr", "quartz_compiler_find_position", "quartz_std_alloc_ptr", "i64_to_string_at", "quartz_ir_code_gen_IrCodeGenerator_wrap_mult_sizeof", "quartz_typecheck_Typechecker_find_at_cursor", "quartz_typecheck_Typechecker_set_search_node_definition", "_fd_close", "quartz_std_max", "quartz_generator_Generator_convert_stack_to_i32_1", "quartz_parser_Parser_expect", "quartz_std_is_address_type_rep", "quartz_path_Path_new", "quartz_lexer_Lexer_match_term", "quartz_std_print", "quartz_compiler_Compiler_load_module", "i64", "LType", "quartz_generator_Generator_function", "quartz_std_type_reps_ptr", "Expression", "quartz_typecheck_Typechecker_expression_left_value", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_type_reps", "quartz_compiler_Compiler_check_type", "quartz_generator_Generator_generate_op_arithmetic_i64", "quartz_ir_code_gen_InternalTypeRep_from_name", "quartz_typecheck_Typechecker_module_", "quartz_ast_Function_to_string", "quartz_compiler_find_position_by_line_counts", "quartz_std_vec_slice", "quartz_std_derive_to_string", "TypeRep", "quartz_path_Path_ident", "quartz_generator_Generator_fold_consts", "quartz_std_string_escape_raw", "LPattern", "InternalTypeRep", "IrTerm", "quartz_generator_Generator_global_let", "quartz_generator_Generator_write", "quartz_generator_Generator_convert_value_address_to_i32_1", "IrCodeGenerator", "quartz_parser_Parser_term_1", "quartz_std_vec_extend_byte", "Lexer", "quartz_parser_Parser_expression", "quartz_typecheck_Typechecker_completion", "debug_i32", "quartz_ir_IrTerm_find_locals", "quartz_generator_Generator_set_strings", "quartz_std_error_detail", "quartz_lexer_Lexer_run", "quartz_std_i64_new", "quartz_std_is_a_record", "IrType", "quartz_ir_code_gen_InternalTypeRep_equal", "quartz_ir_code_gen_TypeRepTable_get_or_insert", "quartz_std_string_lines", "quartz_std_i32_to_string", "quartz_value_Value_wasm_type", "quartz_location_Location_unknown", "quartz_ast_RecordExpression_to_string", "quartz_ir_code_gen_InternalTypeRep_from_ir_type", "quartz_std_is_prefix")
LStatement { data: Statement { t_let: struct { pattern: LPattern { data: Pattern { t_ident: ("path")?, t_or: nil, t_omit: nil }, location: Location { start: (3658)?, end: (3662)? } }, name_type: Type { t_ident: "Path" }, expr: LExpression { data: Expression { t_call: struct { callee: LExpression { data: Expression { t_path: struct { path: Path { path: vec("Path", "new") }, resolved_path: (Path { path: vec("quartz", "path", "Path", "new") })? } }, location: Location { start: (3665)?, end: (3674)? } }, args: vec(LExpression { data: Expression { t_string: struct { value: "main", raw: ""main"" } }, location: Location { start: (3675)?, end: (3681)? } }), variadic: (struct { element_type: Type { t_ident: "string" }, index: 0 })?, expansion: nil } }, location: Location { start: (3665)?, end: (3682)? } } } }, location: Location { start: (3654)?, end: (3683)? } }
or { left: (nil)?, right: nil }
resolve_path: vec("_fd_write", "quartz_path_Path_push", "quartz_ir_IrTerm_ident", "quartz_parser_Parser_struct_decl", "quartz_parser_Parser_new", "quartz_std_hash_string", "quartz_std_i32_parse", "quartz_compiler_find_line_column_from_position", "quartz_generator_Generator_new", "quartz_parser_Parser_return_statement", "quartz_std_read_i32_from_bytes_le", "quartz_ir_code_gen_IrCodeGenerator_statement", "quartz_generator_Generator_expression", "quartz_typecheck_Typechecker_resolve_path", "quartz_lexer_Lexer_consume_raw_string_literal", "quartz_std_args_string", "quartz_ir_code_gen_IrCodeGenerator_allocate_heap_object", "quartz_ast_TypeStruct_index", "quartz_parser_Parser_module_", "quartz_std_vec_make_byte", "quartz_std_map_list_keys", "quartz_std_bool_to_string", "quartz_generator_escape", "quartz_ast_Decl_to_string", "quartz_std_load_type_rep", "quartz_std_u32_to_string", "quartz_std_map_find_entry", "quartz_parser_Parser_let_statement", "Module", "quartz_generator_Generator_run", "quartz_parser_Parser_pattern", "IrCall", "stringbuilder", "quartz_ast_TypeStruct_at", "quartz_parser_Parser_span_location", "quartz_ir_code_gen_IrCodeGenerator_function", "get_args_at", "quartz_std_i64_to_i32", "quartz_ast_Statement_to_string", "quartz_std_dump_strings", "StringTable", "LDecl", "quartz_ast_Expression_to_string", "quartz_parser_Parser_decl", "quartz_generator_Generator_generate_op_comparison", "quartz_typecheck_Typechecker_register_locals_with_pattern", "Block", "quartz_ir_code_gen_IrCodeGenerator_register_string", "quartz_parser_Parser_enum_decl", "quartz_parser_Parser_type_primitive", "quartz_std_file_write", "quartz_ast_Type_is_integer_type", "quartz_parser_Parser_term_3", "quartz_ast_Function_to_type", "Function", "quartz_std_TypeRep_sizeof", "quartz_std_u32_parse", "quartz_compiler_Compiler_matches", "quartz_lexer_Lexer_consume_string_literal", "quartz_std_derive_to_string_internal", "quartz_generator_Generator_set_start_terms", "quartz_ast_Type_to_string", "quartz_std_reflection_print_type", "quartz_std_println", "quartz_typecheck_Typechecker_path_to", "_fd_read", "quartz_generator_Generator_convert_stack_to_bool", "quartz_std_get_type_rep_address", "quartz_ast_Module_to_string", "quartz_typecheck_Typechecker_is_search_finished", "MapEntry", "Generator", "quartz_std_string_starts_with", "quartz_compiler_Compiler_check", "quartz_generator_Generator_decl", "quartz_std_vec_clone", "quartz_std_new_empty_string", "quartz_parser_Parser_type_", "quartz_parser_Parser_consume", "debug", "quartz_std_map_has", "quartz_std_string_repeat", "quartz_std_print_vec_string", "LExpression", "quartz_std_stringbuilder_append", "quartz_parser_Parser_function", "Decl", "quartz_parser_Parser_expect_ident", "quartz_lexer_is_term_boundary", "quartz_ir_IrType_is_nil", "quartz_typecheck_Typechecker_function", "quartz_generator_Generator_convert_value_i32_to_byte_1", "quartz_typecheck_Typechecker_resolve_record_type", "quartz_std_error_new", "Statement", "quartz_path_Path_starts_with", "quartz_std_alloc", "quartz_std_i32_to_i64", "quartz_ir_code_gen_IrCodeGenerator_assign", "quartz_std_vec_extend", "quartz_compiler_Compiler_go_to_def", "RecordExpression", "quartz_ir_code_gen_StringTable_new", "Compiler", "quartz_path_Path_clone", "_reflection_is_pointer", "quartz_std_vec_push_byte", "quartz_std_read_stdin_byte", "_path_open", "quartz_ir_code_gen_IrCodeGenerator_resolve_type_struct", "quartz_std_format", "quartz_lexer_Lexer_consume_number", "quartz_parser_Parser_term_0", "quartz_compiler_Compiler_new", "quartz_std_strings_ptr", "quartz_std_reflection_get_type_rep", "quartz_parser_Parser_peek", "quartz_generator_Generator_optimize_i32", "quartz_std_strings_count", "quartz_parser_Parser_parameters", "quartz_std_vec_at", "TypeRepTable", "quartz_parser_Parser_term_5", "Token", "quartz_std_vec_byte_to_string", "quartz_std_string_concat", "quartz_std_file_open", "quartz_ir_code_gen_IrCodeGenerator_run", "quartz_generator_Generator_start", "reflection_get_type_rep_id", "Typechecker", "quartz_std_string_compare_lte", "quartz_ir_IrType_to_string", "quartz_std_vec_make", "quartz_path_Path_join", "quartz_std_file_read", "quartz_parser_Parser_dot_after", "quartz_std_type_reps_count", "set_ciovec", "_fd_filestat_get", "quartz_std_digit_to_string", "quartz_ir_code_gen_IrCodeGenerator_new", "quartz_std_string_escape_with", "quartz_std_args", "quartz_generator_Generator_convert_stack_from_bool_1", "quartz_lexer_Lexer_consume_space", "quartz_std_vec_push", "quartz_generator_Generator_load_i64", "quartz_ir_code_gen_IrCodeGenerator_write_type_rep", "quartz_parser_Parser_is_end", "quartz_std_char_to_string", "quartz_ir_code_gen_IrCodeGenerator_generate_call", "quartz_typecheck_Typechecker_decl", "quartz_ast_Type_string", "quartz_ir_IrType_sizeof", "quartz_std_string_replace_first", "quartz_std_reflection_is_pointer", "quartz_ast_TypeStruct_has", "quartz_ir_code_gen_StringTable_get_or_insert", "vec", "Ident", "quartz_parser_Parser_global_let", "quartz_generator_Generator_convert_value_byte_to_i32_1", "quartz_generator_MODE_READABLE_WASM", "quartz_value_Value_as_i64", "quartz_ast_RecordExpression_at", "quartz_typecheck_Typechecker_set_search_node_type", "quartz_typecheck_Typechecker_expression", "quartz_generator_Generator_convert_value_i32_to_address_1", "quartz_ir_code_gen_IrCodeGenerator_generate_array_with_rep", "quartz_parser_Parser_module_decl", "quartz_std_vec_at_byte", "quartz_path_Path_extend", "quartz_parser_Parser_term_2", "quartz_compiler_Compiler_parse", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_strings", "quartz_path_Path_remove_prefix", "quartz_typecheck_Typechecker_statement", "quartz_generator_Generator_end", "quartz_ir_code_gen_IrCodeGenerator_module_", "quartz_parser_Parser_ident", "quartz_std_string_split", "quartz_generator_Generator_write_value", "IrReturn", "quartz_value_Value_nil_", "IrLet", "quartz_typecheck_Typechecker_set_completion", "quartz_std_string_to_string", "quartz_std_string_replace", "Map", "quartz_generator_Generator_generate_op_arithmetic", "quartz_ir_IrTerm_to_string", "quartz_std_string_find_first", "quartz_parser_Parser_expression_conditional", "quartz_std_stdin", "quartz_generator_Generator_expression_left_value", "quartz_typecheck_Typechecker_module_register_for_back_reference", "quartz_std_i64_to_string", "quartz_std_reflection_is_bool", "quartz_std_panic", "quartz_generator_Generator_set_globals", "get_args_len", "quartz_generator_Generator_generate", "quartz_generator_Generator_generate_if", "quartz_lexer_Lexer_consume_ident", "quartz_lexer_Lexer_match", "abort", "Type", "string", "_reflection_is_bool", "quartz_std_string_line_counts", "quartz_std_map_insert", "quartz_typecheck_Typechecker_new", "quartz_lexer_Lexer_consume_comment", "quartz_ast_Block_to_string", "Location", "quartz_ir_code_gen_IrCodeGenerator_generate_array_at", "quartz_std_string_at", "println", "Value", "quartz_std_map_at", "quartz_std_string_slice_start", "quartz_generator_Generator_convert_stack_to_i32_2", "quartz_std_file_close", "quartz_parser_Parser_run", "error", "quartz_ir_code_gen_IrCodeGenerator_block", "IrFunc", "quartz_generator_Generator_convert_stack_from_i32_1", "quartz_lexer_Lexer_new", "Let", "quartz_std_is_space", "quartz_ir_code_gen_typeRepKindStruct", "quartz_std_reflection_parse_type_rep", "quartz_compiler_Compiler_register_module", "quartz_parser_Parser_expression_", "quartz_ir_code_gen_IrCodeGenerator_generate_array", "quartz_typecheck_is_prefix_path", "Pattern", "quartz_generator_Generator_set_type_reps", "quartz_std_stringbuilder_new", "quartz_typecheck_unify", "quartz_std_is_included", "quartz_parser_Parser_term_4", "quartz_std_stringbuilder_to_string", "quartz_ir_IrType_new", "quartz_std_string_escape", "quartz_std_map_make", "quartz_std_new_string", "LBlock", "quartz_parser_Parser_term_0_1", "quartz_lexer_Token_to_string", "quartz_ast_Pattern_to_string", "quartz_std_string_slice", "quartz_ir_code_gen_IrCodeGenerator_expression", "quartz_compiler_Compiler_compile", "quartz_ir_code_gen_TypeRepTable_new", "quartz_std_string_format", "quartz_std_vec_pop", "quartz_ir_code_gen_typeRepKindEnum", "quartz_generator_Generator_new_statement", "LoadedModule", "quartz_ast_Let_to_string", "quartz_typecheck_Typechecker_block", "quartz_std_reflection_assert_pointer", "TypeStruct", "quartz_parser_Parser_block", "quartz_std_string_find_all", "quartz_typecheck_Typechecker_find_definition", "Path", "Parser", "quartz_ir_code_gen_IrCodeGenerator_path_to", "quartz_parser_Parser_statement", "quartz_std_string_equal", "quartz_ir_code_gen_InternalTypeRep_from_struct", "quartz_parser_Parser_path", "quartz_ir_IrTerm_i32", "quartz_std_load_string", "xor_u32", "quartz_std_derive_to_string_pretty", "quartz_std_print_string", "quartz_std_read_filestat_get", "LStatement", "quartz_compiler_Compiler_completion", "quartz_std_min", "quartz_ast_RecordExpression_to_fields_map", "quartz_std_reflection_get_type_rep_ptr", "quartz_compiler_find_position", "quartz_std_alloc_ptr", "i64_to_string_at", "quartz_ir_code_gen_IrCodeGenerator_wrap_mult_sizeof", "quartz_typecheck_Typechecker_find_at_cursor", "quartz_typecheck_Typechecker_set_search_node_definition", "_fd_close", "quartz_std_max", "quartz_generator_Generator_convert_stack_to_i32_1", "quartz_parser_Parser_expect", "quartz_std_is_address_type_rep", "quartz_path_Path_new", "quartz_lexer_Lexer_match_term", "quartz_std_print", "quartz_compiler_Compiler_load_module", "i64", "LType", "quartz_generator_Generator_function", "quartz_std_type_reps_ptr", "Expression", "quartz_typecheck_Typechecker_expression_left_value", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_type_reps", "quartz_compiler_Compiler_check_type", "quartz_generator_Generator_generate_op_arithmetic_i64", "quartz_ir_code_gen_InternalTypeRep_from_name", "quartz_typecheck_Typechecker_module_", "quartz_ast_Function_to_string", "quartz_compiler_find_position_by_line_counts", "quartz_std_vec_slice", "quartz_std_derive_to_string", "TypeRep", "quartz_path_Path_ident", "quartz_generator_Generator_fold_consts", "quartz_std_string_escape_raw", "LPattern", "InternalTypeRep", "IrTerm", "quartz_generator_Generator_global_let", "quartz_generator_Generator_write", "quartz_generator_Generator_convert_value_address_to_i32_1", "IrCodeGenerator", "quartz_parser_Parser_term_1", "quartz_std_vec_extend_byte", "Lexer", "quartz_parser_Parser_expression", "quartz_typecheck_Typechecker_completion", "debug_i32", "quartz_ir_IrTerm_find_locals", "quartz_generator_Generator_set_strings", "quartz_std_error_detail", "quartz_lexer_Lexer_run", "quartz_std_i64_new", "quartz_std_is_a_record", "IrType", "quartz_ir_code_gen_InternalTypeRep_equal", "quartz_ir_code_gen_TypeRepTable_get_or_insert", "quartz_std_string_lines", "quartz_std_i32_to_string", "quartz_value_Value_wasm_type", "quartz_location_Location_unknown", "quartz_ast_RecordExpression_to_string", "quartz_ir_code_gen_InternalTypeRep_from_ir_type", "quartz_std_is_prefix")
LStatement { data: Statement { t_let: struct { pattern: LPattern { data: Pattern { t_ident: ("module_")?, t_or: nil, t_omit: nil }, location: Location { start: (3697)?, end: (3704)? } }, name_type: Type { t_omit: true }, expr: LExpression { data: Expression { t_try: LExpression { data: Expression { t_call: struct { callee: LExpression { data: Expression { t_project: struct { expr: LExpression { data: Expression { t_self: true }, location: Location { start: (3707)?, end: (3711)? } }, field: Ident { data: "parse", location: Location { start: (3712)?, end: (3717)? } }, type_: (Type { t_ident: "Compiler" })?, resolved_path: nil } }, location: Location { start: (3707)?, end: (3717)? } }, args: vec(LExpression { data: Expression { t_ident: struct { name: "input", resolved_path: nil } }, location: Location { start: (3718)?, end: (3723)? } }, LExpression { data: Expression { t_nil: true }, location: Location { start: (3725)?, end: (3728)? } }, LExpression { data: Expression { t_bool: true }, location: Location { start: (3730)?, end: (3734)? } }), variadic: nil, expansion: nil } }, location: Location { start: (3707)?, end: (3735)? } } }, location: Location { start: (3707)?, end: (3739)? } } } }, location: Location { start: (3693)?, end: (3740)? } }
or { left: nil, right: (error { message: "unknown symbol: Compiler_parse", detail: nil })? }
resolve_path: vec("_fd_write", "quartz_path_Path_push", "quartz_ir_IrTerm_ident", "quartz_parser_Parser_struct_decl", "quartz_parser_Parser_new", "quartz_std_hash_string", "quartz_std_i32_parse", "quartz_compiler_find_line_column_from_position", "quartz_generator_Generator_new", "quartz_parser_Parser_return_statement", "quartz_std_read_i32_from_bytes_le", "quartz_ir_code_gen_IrCodeGenerator_statement", "quartz_generator_Generator_expression", "quartz_typecheck_Typechecker_resolve_path", "quartz_lexer_Lexer_consume_raw_string_literal", "quartz_std_args_string", "quartz_ir_code_gen_IrCodeGenerator_allocate_heap_object", "quartz_ast_TypeStruct_index", "quartz_parser_Parser_module_", "quartz_std_vec_make_byte", "quartz_std_map_list_keys", "quartz_std_bool_to_string", "quartz_generator_escape", "quartz_ast_Decl_to_string", "quartz_std_load_type_rep", "quartz_std_u32_to_string", "quartz_std_map_find_entry", "quartz_parser_Parser_let_statement", "Module", "quartz_generator_Generator_run", "quartz_parser_Parser_pattern", "IrCall", "stringbuilder", "quartz_ast_TypeStruct_at", "quartz_parser_Parser_span_location", "quartz_ir_code_gen_IrCodeGenerator_function", "get_args_at", "quartz_std_i64_to_i32", "quartz_ast_Statement_to_string", "quartz_std_dump_strings", "StringTable", "LDecl", "quartz_ast_Expression_to_string", "quartz_parser_Parser_decl", "quartz_generator_Generator_generate_op_comparison", "quartz_typecheck_Typechecker_register_locals_with_pattern", "Block", "quartz_ir_code_gen_IrCodeGenerator_register_string", "quartz_parser_Parser_enum_decl", "quartz_parser_Parser_type_primitive", "quartz_std_file_write", "quartz_ast_Type_is_integer_type", "quartz_parser_Parser_term_3", "quartz_ast_Function_to_type", "Function", "quartz_std_TypeRep_sizeof", "quartz_std_u32_parse", "quartz_compiler_Compiler_matches", "quartz_lexer_Lexer_consume_string_literal", "quartz_std_derive_to_string_internal", "quartz_generator_Generator_set_start_terms", "quartz_ast_Type_to_string", "quartz_std_reflection_print_type", "quartz_std_println", "quartz_typecheck_Typechecker_path_to", "_fd_read", "quartz_generator_Generator_convert_stack_to_bool", "quartz_std_get_type_rep_address", "quartz_ast_Module_to_string", "quartz_typecheck_Typechecker_is_search_finished", "MapEntry", "Generator", "quartz_std_string_starts_with", "quartz_compiler_Compiler_check", "quartz_generator_Generator_decl", "quartz_std_vec_clone", "quartz_std_new_empty_string", "quartz_parser_Parser_type_", "quartz_parser_Parser_consume", "debug", "quartz_std_map_has", "quartz_std_string_repeat", "quartz_std_print_vec_string", "LExpression", "quartz_std_stringbuilder_append", "quartz_parser_Parser_function", "Decl", "quartz_parser_Parser_expect_ident", "quartz_lexer_is_term_boundary", "quartz_ir_IrType_is_nil", "quartz_typecheck_Typechecker_function", "quartz_generator_Generator_convert_value_i32_to_byte_1", "quartz_typecheck_Typechecker_resolve_record_type", "quartz_std_error_new", "Statement", "quartz_path_Path_starts_with", "quartz_std_alloc", "quartz_std_i32_to_i64", "quartz_ir_code_gen_IrCodeGenerator_assign", "quartz_std_vec_extend", "quartz_compiler_Compiler_go_to_def", "RecordExpression", "quartz_ir_code_gen_StringTable_new", "Compiler", "quartz_path_Path_clone", "_reflection_is_pointer", "quartz_std_vec_push_byte", "quartz_std_read_stdin_byte", "_path_open", "quartz_ir_code_gen_IrCodeGenerator_resolve_type_struct", "quartz_std_format", "quartz_lexer_Lexer_consume_number", "quartz_parser_Parser_term_0", "quartz_compiler_Compiler_new", "quartz_std_strings_ptr", "quartz_std_reflection_get_type_rep", "quartz_parser_Parser_peek", "quartz_generator_Generator_optimize_i32", "quartz_std_strings_count", "quartz_parser_Parser_parameters", "quartz_std_vec_at", "TypeRepTable", "quartz_parser_Parser_term_5", "Token", "quartz_std_vec_byte_to_string", "quartz_std_string_concat", "quartz_std_file_open", "quartz_ir_code_gen_IrCodeGenerator_run", "quartz_generator_Generator_start", "reflection_get_type_rep_id", "Typechecker", "quartz_std_string_compare_lte", "quartz_ir_IrType_to_string", "quartz_std_vec_make", "quartz_path_Path_join", "quartz_std_file_read", "quartz_parser_Parser_dot_after", "quartz_std_type_reps_count", "set_ciovec", "_fd_filestat_get", "quartz_std_digit_to_string", "quartz_ir_code_gen_IrCodeGenerator_new", "quartz_std_string_escape_with", "quartz_std_args", "quartz_generator_Generator_convert_stack_from_bool_1", "quartz_lexer_Lexer_consume_space", "quartz_std_vec_push", "quartz_generator_Generator_load_i64", "quartz_ir_code_gen_IrCodeGenerator_write_type_rep", "quartz_parser_Parser_is_end", "quartz_std_char_to_string", "quartz_ir_code_gen_IrCodeGenerator_generate_call", "quartz_typecheck_Typechecker_decl", "quartz_ast_Type_string", "quartz_ir_IrType_sizeof", "quartz_std_string_replace_first", "quartz_std_reflection_is_pointer", "quartz_ast_TypeStruct_has", "quartz_ir_code_gen_StringTable_get_or_insert", "vec", "Ident", "quartz_parser_Parser_global_let", "quartz_generator_Generator_convert_value_byte_to_i32_1", "quartz_generator_MODE_READABLE_WASM", "quartz_value_Value_as_i64", "quartz_ast_RecordExpression_at", "quartz_typecheck_Typechecker_set_search_node_type", "quartz_typecheck_Typechecker_expression", "quartz_generator_Generator_convert_value_i32_to_address_1", "quartz_ir_code_gen_IrCodeGenerator_generate_array_with_rep", "quartz_parser_Parser_module_decl", "quartz_std_vec_at_byte", "quartz_path_Path_extend", "quartz_parser_Parser_term_2", "quartz_compiler_Compiler_parse", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_strings", "quartz_path_Path_remove_prefix", "quartz_typecheck_Typechecker_statement", "quartz_generator_Generator_end", "quartz_ir_code_gen_IrCodeGenerator_module_", "quartz_parser_Parser_ident", "quartz_std_string_split", "quartz_generator_Generator_write_value", "IrReturn", "quartz_value_Value_nil_", "IrLet", "quartz_typecheck_Typechecker_set_completion", "quartz_std_string_to_string", "quartz_std_string_replace", "Map", "quartz_generator_Generator_generate_op_arithmetic", "quartz_ir_IrTerm_to_string", "quartz_std_string_find_first", "quartz_parser_Parser_expression_conditional", "quartz_std_stdin", "quartz_generator_Generator_expression_left_value", "quartz_typecheck_Typechecker_module_register_for_back_reference", "quartz_std_i64_to_string", "quartz_std_reflection_is_bool", "quartz_std_panic", "quartz_generator_Generator_set_globals", "get_args_len", "quartz_generator_Generator_generate", "quartz_generator_Generator_generate_if", "quartz_lexer_Lexer_consume_ident", "quartz_lexer_Lexer_match", "abort", "Type", "string", "_reflection_is_bool", "quartz_std_string_line_counts", "quartz_std_map_insert", "quartz_typecheck_Typechecker_new", "quartz_lexer_Lexer_consume_comment", "quartz_ast_Block_to_string", "Location", "quartz_ir_code_gen_IrCodeGenerator_generate_array_at", "quartz_std_string_at", "println", "Value", "quartz_std_map_at", "quartz_std_string_slice_start", "quartz_generator_Generator_convert_stack_to_i32_2", "quartz_std_file_close", "quartz_parser_Parser_run", "error", "quartz_ir_code_gen_IrCodeGenerator_block", "IrFunc", "quartz_generator_Generator_convert_stack_from_i32_1", "quartz_lexer_Lexer_new", "Let", "quartz_std_is_space", "quartz_ir_code_gen_typeRepKindStruct", "quartz_std_reflection_parse_type_rep", "quartz_compiler_Compiler_register_module", "quartz_parser_Parser_expression_", "quartz_ir_code_gen_IrCodeGenerator_generate_array", "quartz_typecheck_is_prefix_path", "Pattern", "quartz_generator_Generator_set_type_reps", "quartz_std_stringbuilder_new", "quartz_typecheck_unify", "quartz_std_is_included", "quartz_parser_Parser_term_4", "quartz_std_stringbuilder_to_string", "quartz_ir_IrType_new", "quartz_std_string_escape", "quartz_std_map_make", "quartz_std_new_string", "LBlock", "quartz_parser_Parser_term_0_1", "quartz_lexer_Token_to_string", "quartz_ast_Pattern_to_string", "quartz_std_string_slice", "quartz_ir_code_gen_IrCodeGenerator_expression", "quartz_compiler_Compiler_compile", "quartz_ir_code_gen_TypeRepTable_new", "quartz_std_string_format", "quartz_std_vec_pop", "quartz_ir_code_gen_typeRepKindEnum", "quartz_generator_Generator_new_statement", "LoadedModule", "quartz_ast_Let_to_string", "quartz_typecheck_Typechecker_block", "quartz_std_reflection_assert_pointer", "TypeStruct", "quartz_parser_Parser_block", "quartz_std_string_find_all", "quartz_typecheck_Typechecker_find_definition", "Path", "Parser", "quartz_ir_code_gen_IrCodeGenerator_path_to", "quartz_parser_Parser_statement", "quartz_std_string_equal", "quartz_ir_code_gen_InternalTypeRep_from_struct", "quartz_parser_Parser_path", "quartz_ir_IrTerm_i32", "quartz_std_load_string", "xor_u32", "quartz_std_derive_to_string_pretty", "quartz_std_print_string", "quartz_std_read_filestat_get", "LStatement", "quartz_compiler_Compiler_completion", "quartz_std_min", "quartz_ast_RecordExpression_to_fields_map", "quartz_std_reflection_get_type_rep_ptr", "quartz_compiler_find_position", "quartz_std_alloc_ptr", "i64_to_string_at", "quartz_ir_code_gen_IrCodeGenerator_wrap_mult_sizeof", "quartz_typecheck_Typechecker_find_at_cursor", "quartz_typecheck_Typechecker_set_search_node_definition", "_fd_close", "quartz_std_max", "quartz_generator_Generator_convert_stack_to_i32_1", "quartz_parser_Parser_expect", "quartz_std_is_address_type_rep", "quartz_path_Path_new", "quartz_lexer_Lexer_match_term", "quartz_std_print", "quartz_compiler_Compiler_load_module", "i64", "LType", "quartz_generator_Generator_function", "quartz_std_type_reps_ptr", "Expression", "quartz_typecheck_Typechecker_expression_left_value", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_type_reps", "quartz_compiler_Compiler_check_type", "quartz_generator_Generator_generate_op_arithmetic_i64", "quartz_ir_code_gen_InternalTypeRep_from_name", "quartz_typecheck_Typechecker_module_", "quartz_ast_Function_to_string", "quartz_compiler_find_position_by_line_counts", "quartz_std_vec_slice", "quartz_std_derive_to_string", "TypeRep", "quartz_path_Path_ident", "quartz_generator_Generator_fold_consts", "quartz_std_string_escape_raw", "LPattern", "InternalTypeRep", "IrTerm", "quartz_generator_Generator_global_let", "quartz_generator_Generator_write", "quartz_generator_Generator_convert_value_address_to_i32_1", "IrCodeGenerator", "quartz_parser_Parser_term_1", "quartz_std_vec_extend_byte", "Lexer", "quartz_parser_Parser_expression", "quartz_typecheck_Typechecker_completion", "debug_i32", "quartz_ir_IrTerm_find_locals", "quartz_generator_Generator_set_strings", "quartz_std_error_detail", "quartz_lexer_Lexer_run", "quartz_std_i64_new", "quartz_std_is_a_record", "IrType", "quartz_ir_code_gen_InternalTypeRep_equal", "quartz_ir_code_gen_TypeRepTable_get_or_insert", "quartz_std_string_lines", "quartz_std_i32_to_string", "quartz_value_Value_wasm_type", "quartz_location_Location_unknown", "quartz_ast_RecordExpression_to_string", "quartz_ir_code_gen_InternalTypeRep_from_ir_type", "quartz_std_is_prefix")
resolve_path: vec("_fd_write", "quartz_path_Path_push", "quartz_ir_IrTerm_ident", "quartz_parser_Parser_struct_decl", "quartz_parser_Parser_new", "quartz_std_hash_string", "quartz_std_i32_parse", "quartz_compiler_find_line_column_from_position", "quartz_generator_Generator_new", "quartz_parser_Parser_return_statement", "quartz_std_read_i32_from_bytes_le", "quartz_ir_code_gen_IrCodeGenerator_statement", "quartz_generator_Generator_expression", "quartz_typecheck_Typechecker_resolve_path", "quartz_lexer_Lexer_consume_raw_string_literal", "quartz_std_args_string", "quartz_ir_code_gen_IrCodeGenerator_allocate_heap_object", "quartz_ast_TypeStruct_index", "quartz_parser_Parser_module_", "quartz_std_vec_make_byte", "quartz_std_map_list_keys", "quartz_std_bool_to_string", "quartz_generator_escape", "quartz_ast_Decl_to_string", "quartz_std_load_type_rep", "quartz_std_u32_to_string", "quartz_std_map_find_entry", "quartz_parser_Parser_let_statement", "Module", "quartz_generator_Generator_run", "quartz_parser_Parser_pattern", "IrCall", "stringbuilder", "quartz_ast_TypeStruct_at", "quartz_parser_Parser_span_location", "quartz_ir_code_gen_IrCodeGenerator_function", "get_args_at", "quartz_std_i64_to_i32", "quartz_ast_Statement_to_string", "quartz_std_dump_strings", "StringTable", "LDecl", "quartz_ast_Expression_to_string", "quartz_parser_Parser_decl", "quartz_generator_Generator_generate_op_comparison", "quartz_typecheck_Typechecker_register_locals_with_pattern", "Block", "quartz_ir_code_gen_IrCodeGenerator_register_string", "quartz_parser_Parser_enum_decl", "quartz_parser_Parser_type_primitive", "quartz_std_file_write", "quartz_ast_Type_is_integer_type", "quartz_parser_Parser_term_3", "quartz_ast_Function_to_type", "Function", "quartz_std_TypeRep_sizeof", "quartz_std_u32_parse", "quartz_compiler_Compiler_matches", "quartz_lexer_Lexer_consume_string_literal", "quartz_std_derive_to_string_internal", "quartz_generator_Generator_set_start_terms", "quartz_ast_Type_to_string", "quartz_std_reflection_print_type", "quartz_std_println", "quartz_typecheck_Typechecker_path_to", "_fd_read", "quartz_generator_Generator_convert_stack_to_bool", "quartz_std_get_type_rep_address", "quartz_ast_Module_to_string", "quartz_typecheck_Typechecker_is_search_finished", "MapEntry", "Generator", "quartz_std_string_starts_with", "quartz_compiler_Compiler_check", "quartz_generator_Generator_decl", "quartz_std_vec_clone", "quartz_std_new_empty_string", "quartz_parser_Parser_type_", "quartz_parser_Parser_consume", "debug", "quartz_std_map_has", "quartz_std_string_repeat", "quartz_std_print_vec_string", "LExpression", "quartz_std_stringbuilder_append", "quartz_parser_Parser_function", "Decl", "quartz_parser_Parser_expect_ident", "quartz_lexer_is_term_boundary", "quartz_ir_IrType_is_nil", "quartz_typecheck_Typechecker_function", "quartz_generator_Generator_convert_value_i32_to_byte_1", "quartz_typecheck_Typechecker_resolve_record_type", "quartz_std_error_new", "Statement", "quartz_path_Path_starts_with", "quartz_std_alloc", "quartz_std_i32_to_i64", "quartz_ir_code_gen_IrCodeGenerator_assign", "quartz_std_vec_extend", "quartz_compiler_Compiler_go_to_def", "RecordExpression", "quartz_ir_code_gen_StringTable_new", "Compiler", "quartz_path_Path_clone", "_reflection_is_pointer", "quartz_std_vec_push_byte", "quartz_std_read_stdin_byte", "_path_open", "quartz_ir_code_gen_IrCodeGenerator_resolve_type_struct", "quartz_std_format", "quartz_lexer_Lexer_consume_number", "quartz_parser_Parser_term_0", "quartz_compiler_Compiler_new", "quartz_std_strings_ptr", "quartz_std_reflection_get_type_rep", "quartz_parser_Parser_peek", "quartz_generator_Generator_optimize_i32", "quartz_std_strings_count", "quartz_parser_Parser_parameters", "quartz_std_vec_at", "TypeRepTable", "quartz_parser_Parser_term_5", "Token", "quartz_std_vec_byte_to_string", "quartz_std_string_concat", "quartz_std_file_open", "quartz_ir_code_gen_IrCodeGenerator_run", "quartz_generator_Generator_start", "reflection_get_type_rep_id", "Typechecker", "quartz_std_string_compare_lte", "quartz_ir_IrType_to_string", "quartz_std_vec_make", "quartz_path_Path_join", "quartz_std_file_read", "quartz_parser_Parser_dot_after", "quartz_std_type_reps_count", "set_ciovec", "_fd_filestat_get", "quartz_std_digit_to_string", "quartz_ir_code_gen_IrCodeGenerator_new", "quartz_std_string_escape_with", "quartz_std_args", "quartz_generator_Generator_convert_stack_from_bool_1", "quartz_lexer_Lexer_consume_space", "quartz_std_vec_push", "quartz_generator_Generator_load_i64", "quartz_ir_code_gen_IrCodeGenerator_write_type_rep", "quartz_parser_Parser_is_end", "quartz_std_char_to_string", "quartz_ir_code_gen_IrCodeGenerator_generate_call", "quartz_typecheck_Typechecker_decl", "quartz_ast_Type_string", "quartz_ir_IrType_sizeof", "quartz_std_string_replace_first", "quartz_std_reflection_is_pointer", "quartz_ast_TypeStruct_has", "quartz_ir_code_gen_StringTable_get_or_insert", "vec", "Ident", "quartz_parser_Parser_global_let", "quartz_generator_Generator_convert_value_byte_to_i32_1", "quartz_generator_MODE_READABLE_WASM", "quartz_value_Value_as_i64", "quartz_ast_RecordExpression_at", "quartz_typecheck_Typechecker_set_search_node_type", "quartz_typecheck_Typechecker_expression", "quartz_generator_Generator_convert_value_i32_to_address_1", "quartz_ir_code_gen_IrCodeGenerator_generate_array_with_rep", "quartz_parser_Parser_module_decl", "quartz_std_vec_at_byte", "quartz_path_Path_extend", "quartz_parser_Parser_term_2", "quartz_compiler_Compiler_parse", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_strings", "quartz_path_Path_remove_prefix", "quartz_typecheck_Typechecker_statement", "quartz_generator_Generator_end", "quartz_ir_code_gen_IrCodeGenerator_module_", "quartz_parser_Parser_ident", "quartz_std_string_split", "quartz_generator_Generator_write_value", "IrReturn", "quartz_value_Value_nil_", "IrLet", "quartz_typecheck_Typechecker_set_completion", "quartz_std_string_to_string", "quartz_std_string_replace", "Map", "quartz_generator_Generator_generate_op_arithmetic", "quartz_ir_IrTerm_to_string", "quartz_std_string_find_first", "quartz_parser_Parser_expression_conditional", "quartz_std_stdin", "quartz_generator_Generator_expression_left_value", "quartz_typecheck_Typechecker_module_register_for_back_reference", "quartz_std_i64_to_string", "quartz_std_reflection_is_bool", "quartz_std_panic", "quartz_generator_Generator_set_globals", "get_args_len", "quartz_generator_Generator_generate", "quartz_generator_Generator_generate_if", "quartz_lexer_Lexer_consume_ident", "quartz_lexer_Lexer_match", "abort", "Type", "string", "_reflection_is_bool", "quartz_std_string_line_counts", "quartz_std_map_insert", "quartz_typecheck_Typechecker_new", "quartz_lexer_Lexer_consume_comment", "quartz_ast_Block_to_string", "Location", "quartz_ir_code_gen_IrCodeGenerator_generate_array_at", "quartz_std_string_at", "println", "Value", "quartz_std_map_at", "quartz_std_string_slice_start", "quartz_generator_Generator_convert_stack_to_i32_2", "quartz_std_file_close", "quartz_parser_Parser_run", "error", "quartz_ir_code_gen_IrCodeGenerator_block", "IrFunc", "quartz_generator_Generator_convert_stack_from_i32_1", "quartz_lexer_Lexer_new", "Let", "quartz_std_is_space", "quartz_ir_code_gen_typeRepKindStruct", "quartz_std_reflection_parse_type_rep", "quartz_compiler_Compiler_register_module", "quartz_parser_Parser_expression_", "quartz_ir_code_gen_IrCodeGenerator_generate_array", "quartz_typecheck_is_prefix_path", "Pattern", "quartz_generator_Generator_set_type_reps", "quartz_std_stringbuilder_new", "quartz_typecheck_unify", "quartz_std_is_included", "quartz_parser_Parser_term_4", "quartz_std_stringbuilder_to_string", "quartz_ir_IrType_new", "quartz_std_string_escape", "quartz_std_map_make", "quartz_std_new_string", "LBlock", "quartz_parser_Parser_term_0_1", "quartz_lexer_Token_to_string", "quartz_ast_Pattern_to_string", "quartz_std_string_slice", "quartz_ir_code_gen_IrCodeGenerator_expression", "quartz_compiler_Compiler_compile", "quartz_ir_code_gen_TypeRepTable_new", "quartz_std_string_format", "quartz_std_vec_pop", "quartz_ir_code_gen_typeRepKindEnum", "quartz_generator_Generator_new_statement", "LoadedModule", "quartz_ast_Let_to_string", "quartz_typecheck_Typechecker_block", "quartz_std_reflection_assert_pointer", "TypeStruct", "quartz_parser_Parser_block", "quartz_std_string_find_all", "quartz_typecheck_Typechecker_find_definition", "Path", "Parser", "quartz_ir_code_gen_IrCodeGenerator_path_to", "quartz_parser_Parser_statement", "quartz_std_string_equal", "quartz_ir_code_gen_InternalTypeRep_from_struct", "quartz_parser_Parser_path", "quartz_ir_IrTerm_i32", "quartz_std_load_string", "xor_u32", "quartz_std_derive_to_string_pretty", "quartz_std_print_string", "quartz_std_read_filestat_get", "LStatement", "quartz_compiler_Compiler_completion", "quartz_std_min", "quartz_ast_RecordExpression_to_fields_map", "quartz_std_reflection_get_type_rep_ptr", "quartz_compiler_find_position", "quartz_std_alloc_ptr", "i64_to_string_at", "quartz_ir_code_gen_IrCodeGenerator_wrap_mult_sizeof", "quartz_typecheck_Typechecker_find_at_cursor", "quartz_typecheck_Typechecker_set_search_node_definition", "_fd_close", "quartz_std_max", "quartz_generator_Generator_convert_stack_to_i32_1", "quartz_parser_Parser_expect", "quartz_std_is_address_type_rep", "quartz_path_Path_new", "quartz_lexer_Lexer_match_term", "quartz_std_print", "quartz_compiler_Compiler_load_module", "i64", "LType", "quartz_generator_Generator_function", "quartz_std_type_reps_ptr", "Expression", "quartz_typecheck_Typechecker_expression_left_value", "quartz_ir_code_gen_IrCodeGenerator_generate_prepare_type_reps", "quartz_compiler_Compiler_check_type", "quartz_generator_Generator_generate_op_arithmetic_i64", "quartz_ir_code_gen_InternalTypeRep_from_name", "quartz_typecheck_Typechecker_module_", "quartz_ast_Function_to_string", "quartz_compiler_find_position_by_line_counts", "quartz_std_vec_slice", "quartz_std_derive_to_string", "TypeRep", "quartz_path_Path_ident", "quartz_generator_Generator_fold_consts", "quartz_std_string_escape_raw", "LPattern", "InternalTypeRep", "IrTerm", "quartz_generator_Generator_global_let", "quartz_generator_Generator_write", "quartz_generator_Generator_convert_value_address_to_i32_1", "IrCodeGenerator", "quartz_parser_Parser_term_1", "quartz_std_vec_extend_byte", "Lexer", "quartz_parser_Parser_expression", "quartz_typecheck_Typechecker_completion", "debug_i32", "quartz_ir_IrTerm_find_locals", "quartz_generator_Generator_set_strings", "quartz_std_error_detail", "quartz_lexer_Lexer_run", "quartz_std_i64_new", "quartz_std_is_a_record", "IrType", "quartz_ir_code_gen_InternalTypeRep_equal", "quartz_ir_code_gen_TypeRepTable_get_or_insert", "quartz_std_string_lines", "quartz_std_i32_to_string", "quartz_value_Value_wasm_type", "quartz_location_Location_unknown", "quartz_ast_RecordExpression_to_string", "quartz_ir_code_gen_InternalTypeRep_from_ir_type", "quartz_std_is_prefix")
not found
