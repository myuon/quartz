struct P {
    x: i32,
}

fun g(arg1: P): P {
    perform_gc();

    return arg1;
}

fun f(arg1: P): P {
    return g(arg1);
}

fun main(): bool {
    debug(type_reps_ptr);
    for i in 0..type_reps_count {
        debug(type_reps_ptr.at(i));
    }
    abort();
    let p = P {
        x: 42,
    };
    let q = f(p);

    let object = Header::from_data_ptr(q as ptr[byte]);
    return object.get_is_free();
}

